Endpoint CLI
--------------
aws sagemaker-runtime invoke-endpoint \
    --endpoint-name "IrisEndpoint" \ 
    --body "5.7,2.9,4.2,1.3" \
    --content-type "text/csv;label_size=0" \
    --cli-binary-format raw-in-base64-out \
    /dev/stdout

aws sagemaker-runtime invoke-endpoint \
    --endpoint-name "ChurnEndpoint" \
    --body "41,25.25,996.45,0,1,1,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,1,1,0,0,0" \
    --content-type "text/csv;label_size=1" \
    --cli-binary-format raw-in-base64-out \
    /dev/stdout




Lambda Function For API
----------------
import boto3
import json
import os

# Initialize the SageMaker runtime client
sagemaker_runtime = boto3.client("sagemaker-runtime")

# Get the endpoint name from environment variables
ENDPOINT_NAME = os.environ.get("SAGEMAKER_ENDPOINT_NAME", "IrisEndpoint")

def lambda_handler(event, context):
    try:
        
        body = json.loads(event.get("body", "{}"))
        
        # Extract input data from the event
        if "instances" not in body:
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Missing 'instances' key in input"})
            }
        
        # Convert input into CSV format
        csv_input = ",".join(map(str, body["instances"]))

        # Invoke the SageMaker endpoint
        response = sagemaker_runtime.invoke_endpoint(
            EndpointName=ENDPOINT_NAME,
            ContentType="text/csv;label_size=0",
            Body=csv_input
        )
        
        # Decode the response payload
        result = response["Body"].read().decode("utf-8")

        return {
            "statusCode": 200,
            "body": json.dumps({"predictions": result})
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)})
        }


Attach policy
----------------
  "Effect": "Allow",
  "Action": "sagemaker:InvokeEndpoint",
  "Resource": "arn:aws:sagemaker:<region>:<account_id>:endpoint/<endpoint-name>"



Test Lambda
-----------------
{
  "instances": [6.3, 2.5, 5, 1.9]
}

curl -X POST 'https://8clx4hwud4.execute-api.ap-southeast-2.amazonaws.com/prod/predict' --header 'Content-Type: application/json' --data-raw '{"instances": ["5.7", "3.8", "1.7", "0.3"]}'


lambda function for Testing 

import boto3
import json
import os

# Initialize the SageMaker runtime client
sagemaker_runtime = boto3.client("sagemaker-runtime")

# Get the endpoint name from environment variables
ENDPOINT_NAME = os.environ.get("SAGEMAKER_ENDPOINT_NAME", "irisendpoint")

def lambda_handler(event, context):
    try:
        
        body = json.loads(event.get("body", "{}"))
        
        # Extract input data from the event
        if "instances" not in event:
            return {
                "statusCode": 400,
                "body": json.dumps({"error": "Missing 'instances' key in input"})
            }
        
        # Convert input into CSV format
        csv_input = ",".join(map(str, event["instances"]))

        # Invoke the SageMaker endpoint
        response = sagemaker_runtime.invoke_endpoint(
            EndpointName=ENDPOINT_NAME,
            ContentType="text/csv;label_size=0",
            Body=csv_input
        )
        
        # Decode the response payload
        result = response["Body"].read().decode("utf-8")

        return {
            "statusCode": 200,
            "body": json.dumps({"predictions": result})
        }

    except Exception as e:
        return {
            "statusCode": 500,
            "body": json.dumps({"error": str(e)})
        }

